<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<task:annotation-driven/> <!-- scheduler 에너테이션 사용 가능 -->
	<!-- 
	<task:scheduler id="scheduler" pool-size="5"/>
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="productDAO" method="setProductList" fixed-rate="30000"/>
	</task:scheduled-tasks>
 	-->

	<view-controller path="start" view-name="start" /> <!-- url 주소창에 / start를 입력하면 /WEB-INF/views/start.jsp 화면으로 나타남 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/resources/upload/"/>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />		
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- File 다운로드 하기 위한 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	<!-- down로드하기 위한 bean 등록!! -->
	<beans:bean id="download" class="com.pro.bf.controller.DownloadView"/>
	
	<!-- context:component-scan : root-Context에서 이미 Repository와 Service를 읽어왔기 때문에 Controller만 읽어오면 됨  -->
	<!-- 클래스에 @Service 등을 사용하면 바로 bean 등록이 되며 사용 가능하다. -->
	<context:component-scan base-package="com.pro" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<context:annotation-config /> <!-- controller로 등록한 bean을 바로 사용할 수 있음 -->
	
	<!-- interceptor : servlet-context.xml 에서 설정한다. -->
	<interceptors>
		<!-- 회원 로그인 후 로그 기록을 남기기 위한 interceptor -->
		<interceptor>
			<mapping path="/**"/>
			<!-- 컨트롤러 화면전환 무조껀 true -->
			<exclude-mapping path="/admin/**" />
<!-- 			<exclude-mapping path="/resources" /> -->
<!-- 			<exclude-mapping path="/resources/**" /> -->
			<beans:bean id="handlerInterceptor" class="com.pro.bf.interceptor.HandlerInterceptor" />
		</interceptor>
	</interceptors>

</beans:beans>